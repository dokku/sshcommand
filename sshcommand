#!/bin/bash
set -e

shopt -s nocasematch #For case insensitive string matching, for the first parameter

SELF=`which $0`

case "$1" in
  create) # sshcommand create <user> <command>
    if [[ $# -ne 3 ]]; then
      echo "Usage : sshcommand create user command"
      exit -1
    fi
    USER="$2"; COMMAND="$3"

    if id -u $USER >/dev/null 2>&1; then
        echo "User '$USER' already exists"
    else
        adduser --disabled-password --gecos "" $USER
    fi

    mkdir -p $(sh -c "echo ~$USER")/.ssh
    touch $(sh -c "echo ~$USER")/.ssh/authorized_keys
    echo "$COMMAND" > $(sh -c "echo ~$USER")/.sshcommand
    chown -R $USER $(sh -c "echo ~$USER")
    ;;

  acl-add) # sshcommand acl-add <user> <identifier>
    if [[ $# -ne 3 ]]; then
      echo "Usage : sshcommand acl-add user identifier"
      exit -1
    fi
    USER="$2"; NAME="$3"

    getent passwd $USER > /dev/null || false

    KEY=$(cat)
    FINGERPRINT=$(ssh-keygen -lf /dev/stdin <<< $(echo $KEY) | awk '{print $2}')
    KEY_PREFIX="command=\"FINGERPRINT=$FINGERPRINT NAME=$NAME \`cat $(sh -c "echo ~$USER")/.sshcommand\` \$SSH_ORIGINAL_COMMAND\",no-user-rc,no-X11-forwarding,no-port-forwarding"
    echo "$KEY_PREFIX $KEY" >> $(sh -c "echo ~$USER")/.ssh/authorized_keys
    echo $FINGERPRINT
    ;;

  acl-remove) # sshcommand acl-remove <user> <identifier>
    if [[ $# -ne 3 ]]; then
      echo "Usage : sshcommand acl-remove user identifier"
      exit -1
    fi
    USER="$2"; NAME="$3"

    getent passwd $USER > /dev/null || false

    sed --in-place "/ NAME=$NAME /d" $(sh -c "echo ~$USER")/.ssh/authorized_keys
    ;;

  help|*) # sshcommand help
    echo "Usage : sshcommand create user command"
    echo "        sshcommand acl-add user identifier"
    echo "        sshcommand acl-remove user identifier"
    echo "        sshcommand help # shows this usage message"
    ;;

esac

